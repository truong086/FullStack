// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using thuongmaidientus1.Models;

#nullable disable

namespace thuongmaidientus1.Migrations
{
    [DbContext(typeof(DBContexts))]
    partial class DBContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("thuongmaidientus1.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("roleid")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("roleid");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("creatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Merchant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MerchantIpnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantReturnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantWebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.ToTable("merchants");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Accountsid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("orderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Accountsid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.OrderDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Ordersid")
                        .HasColumnType("int");

                    b.Property<int?>("Productsid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Ordersid");

                    b.HasIndex("Productsid");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ExpireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MerchantIdid")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("PaymentDestinationIdid")
                        .HasColumnType("int");

                    b.Property<string>("PaymentLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentLastMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentRefId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("MerchantIdid");

                    b.HasIndex("PaymentDestinationIdid");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentDescription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DesLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesSortIndex")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentIdid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("ParentIdid");

                    b.ToTable("paymentDescriptions");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("NotiAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiResDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiSatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotiSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentIdid")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentRefId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("PaymentIdid");

                    b.ToTable("paymentNotifications");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentSignature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentIdid")
                        .HasColumnType("int");

                    b.Property<string>("SignAlgo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("SignDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SignOwn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("PaymentIdid");

                    b.ToTable("paymentSignatures");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentTransaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentIdid")
                        .HasColumnType("int");

                    b.Property<decimal?>("TranAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("TranDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TranMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranPayLoad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("PaymentIdid");

                    b.ToTable("paymentTransactions");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Accountsid")
                        .HasColumnType("int");

                    b.Property<int?>("Categorysid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Shopsid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("click")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Accountsid");

                    b.HasIndex("Categorysid");

                    b.HasIndex("Shopsid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ProductCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Categoryid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Productid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Productid");

                    b.ToTable("productCategories");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ProductImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productid");

                    b.ToTable("productimages");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("diachi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sodienthoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vanchuyenid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("vanchuyenid");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ShopVanchuyen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Vanchuyenid")
                        .HasColumnType("int");

                    b.Property<int?>("shopid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Vanchuyenid");

                    b.HasIndex("shopid");

                    b.ToTable("shopVanchuyens");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Tokens", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("geneToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Vanchuyen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("diachi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("vanchuyens");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Xulydonhang", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Accountid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soluong")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.Property<string>("trangthai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vanchuyenid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Accountid");

                    b.HasIndex("vanchuyenid");

                    b.ToTable("xulydonhangs");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Account", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Roles", "role")
                        .WithMany("accounts")
                        .HasForeignKey("roleid");

                    b.Navigation("role");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Category", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "account")
                        .WithMany("Categories")
                        .HasForeignKey("accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Order", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "Accounts")
                        .WithMany("Orders")
                        .HasForeignKey("Accountsid");

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.OrderDetails", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Ordersid");

                    b.HasOne("thuongmaidientus1.Models.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Productsid");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Payment", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Merchant", "MerchantId")
                        .WithMany("Payments")
                        .HasForeignKey("MerchantIdid");

                    b.HasOne("thuongmaidientus1.Models.PaymentDescription", "PaymentDestinationId")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentDestinationIdid");

                    b.Navigation("MerchantId");

                    b.Navigation("PaymentDestinationId");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentDescription", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.PaymentDescription", "ParentId")
                        .WithMany("PaymentDescriptions")
                        .HasForeignKey("ParentIdid");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentNotification", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Payment", "PaymentId")
                        .WithMany("PaymentNotifications")
                        .HasForeignKey("PaymentIdid");

                    b.Navigation("PaymentId");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentSignature", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Payment", "PaymentId")
                        .WithMany("PaymentSignatures")
                        .HasForeignKey("PaymentIdid");

                    b.Navigation("PaymentId");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentTransaction", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Payment", "PaymentId")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("PaymentIdid");

                    b.Navigation("PaymentId");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Product", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "Accounts")
                        .WithMany("Products")
                        .HasForeignKey("Accountsid");

                    b.HasOne("thuongmaidientus1.Models.Category", "Categorys")
                        .WithMany("Products")
                        .HasForeignKey("Categorysid");

                    b.HasOne("thuongmaidientus1.Models.Shop", "Shops")
                        .WithMany("Products")
                        .HasForeignKey("Shopsid");

                    b.Navigation("Accounts");

                    b.Navigation("Categorys");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ProductCategory", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Category", "Category")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("Categoryid");

                    b.HasOne("thuongmaidientus1.Models.Product", "Product")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("Productid");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ProductImage", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Product", "product")
                        .WithMany("ProductImages")
                        .HasForeignKey("productid");

                    b.Navigation("product");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Shop", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "account")
                        .WithMany("Shops")
                        .HasForeignKey("accountid");

                    b.HasOne("thuongmaidientus1.Models.Vanchuyen", "vanchuyen")
                        .WithMany("Shops")
                        .HasForeignKey("vanchuyenid");

                    b.Navigation("account");

                    b.Navigation("vanchuyen");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.ShopVanchuyen", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Vanchuyen", "Vanchuyen")
                        .WithMany("ShopVanchuyens")
                        .HasForeignKey("Vanchuyenid");

                    b.HasOne("thuongmaidientus1.Models.Shop", "shop")
                        .WithMany("ShopVanchuyens")
                        .HasForeignKey("shopid");

                    b.Navigation("Vanchuyen");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Tokens", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Xulydonhang", b =>
                {
                    b.HasOne("thuongmaidientus1.Models.Account", "Account")
                        .WithMany("Xulydonhangs")
                        .HasForeignKey("Accountid");

                    b.HasOne("thuongmaidientus1.Models.Vanchuyen", "vanchuyen")
                        .WithMany("Vanchuyens")
                        .HasForeignKey("vanchuyenid");

                    b.Navigation("Account");

                    b.Navigation("vanchuyen");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Account", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Orders");

                    b.Navigation("Products");

                    b.Navigation("Shops");

                    b.Navigation("Xulydonhangs");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Category", b =>
                {
                    b.Navigation("CategoryProduct");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Merchant", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Payment", b =>
                {
                    b.Navigation("PaymentNotifications");

                    b.Navigation("PaymentSignatures");

                    b.Navigation("PaymentTransactions");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.PaymentDescription", b =>
                {
                    b.Navigation("PaymentDescriptions");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Product", b =>
                {
                    b.Navigation("CategoryProduct");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Roles", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Shop", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("ShopVanchuyens");
                });

            modelBuilder.Entity("thuongmaidientus1.Models.Vanchuyen", b =>
                {
                    b.Navigation("ShopVanchuyens");

                    b.Navigation("Shops");

                    b.Navigation("Vanchuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
